name: Test smbprotocol
on:
  push:
    branches:
    - master
    paths-ignore:
    - CHANGELOG.md
    - LICENSE
    - README.md

  pull_request:
    branches:
    - master
    paths-ignore:
    - CHANGELOG.md
    - LICENSE
    - README.md

  release:
    types:
    - published

  schedule:
  - cron: 0 9 * * *

jobs:
  test:
    name: test
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macOS-latest
        - windows-2019
        - windows-2022
        python-version:
        - 3.6
        - 3.7
        - 3.8
        - 3.9
        - '3.10'
        python-arch:
        - x86
        - x64

        exclude:
        - os: ubuntu-latest
          python-arch: x86
        - os: macOS-latest
          python-arch: x86
        - os: windows-2019
          python-arch: x86
        - os: windows-2019
          python-version: 3.6
        - os: windows-2019
          python-version: 3.7
        - os: windows-2019
          python-version: 3.8
        - os: windows-2019
          python-version: 3.9

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.python-arch }}

    - name: Extract OS name
      shell: bash
      run: |
        echo "##[set-output name=name;]$( echo '${{ matrix.os }}' | tr '-' ' ' | awk '{print $1}' )"
      id: os

    - name: Test
      shell: bash
      run: |
        if [ "$(expr substr $(uname -s) 1 5)" == "MINGW" ]; then
            build_helpers/run-ci.sh
        else
            sudo -E build_helpers/run-ci.sh
        fi
      env:
        PYTEST_ADDOPTS: --color=yes

    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Unit Test Results (${{ matrix.os }} ${{ matrix.python-version }} ${{ matrix.python-arch }})
        path: ./junit/test-results.xml

    - name: Upload Coverage Results
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: Coverage Results (${{ matrix.os }} ${{ matrix.python-version }} ${{ matrix.python-arch }})
        path: ./coverage.xml

    - name: Upload Coverage to codecov
      if: always()
      uses: codecov/codecov-action@v2
      with:
        files: ./coverage.xml
        flags: ${{ steps.os.outputs.name }},py${{ matrix.python-version }},${{ matrix.python-arch }}

  publish:
    name: publish
    needs:
    - test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2

    - name: Installing baseline packages
      run: |
        echo "Installing baseline pip packages"
        python -m pip install --upgrade pip setuptools wheel

    - name: Build package
      run: python setup.py sdist bdist_wheel

    - name: Capture Wheel and SDist
      uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: dist/*

    - name: Publish
      if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
